name: Deploy AI Photo Booth to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Validate HTML
        run: |
          # Basic HTML validation
          if ! grep -q "<!DOCTYPE html>" index.html; then
            echo "Error: Missing DOCTYPE declaration"
            exit 1
          fi
          echo "HTML validation passed"
          
      - name: Validate JavaScript
        run: |
          # Basic JS syntax check
          node -c app.js
          echo "JavaScript syntax validation passed"
          
      - name: Check required files
        run: |
          # Ensure all required files exist
          required_files=("index.html" "styles.css" "app.js" "README.md")
          for file in "${required_files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "Error: Required file $file is missing"
              exit 1
            fi
          done
          echo "All required files present"
          
      - name: Verify Face-api.js CDN links
        run: |
          # Check if Face-api.js CDN links are accessible
          curl -f -s "https://cdn.jsdelivr.net/npm/face-api.js@0.22.2/dist/face-api.min.js" > /dev/null
          if [ $? -eq 0 ]; then
            echo "Face-api.js CDN link verified"
          else
            echo "Warning: Face-api.js CDN link may be inaccessible"
          fi
          
      - name: Check QRCode.js CDN
        run: |
          # Check QRCode.js CDN link
          curl -f -s "https://cdn.jsdelivr.net/npm/qrcode@1.5.3/build/qrcode.min.js" > /dev/null
          if [ $? -eq 0 ]; then
            echo "QRCode.js CDN link verified"
          else
            echo "Warning: QRCode.js CDN link may be inaccessible"
          fi
          
      - name: Create deployment info
        run: |
          # Create a deployment info file
          cat > deployment-info.txt << EOF
          Deployment Information
          =====================
          Date: $(date)
          Commit: ${{ github.sha }}
          Branch: ${{ github.ref }}
          Workflow: ${{ github.workflow }}
          
          Files included:
          $(ls -la)
          
          CDN Dependencies:
          - Face-api.js: https://cdn.jsdelivr.net/npm/face-api.js@0.22.2/
          - QRCode.js: https://cdn.jsdelivr.net/npm/qrcode@1.5.3/
          
          Features:
          - AI Face Detection and Swapping
          - Real-time camera access
          - Mobile responsive design
          - Red Cross Youth branding
          - Download, share, and print functionality
          EOF
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

  # Deployment job
  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Post-deployment check
        run: |
          echo "Deployment completed successfully!"
          echo "Your AI Photo Booth is now available at: ${{ steps.deployment.outputs.page_url }}"
          echo ""
          echo "Next steps:"
          echo "1. Test the camera functionality"
          echo "2. Verify AI face detection works"
          echo "3. Check mobile responsiveness"
          echo "4. Replace emoji templates with real images if needed"
          echo ""
          echo "For issues, check the README.md troubleshooting section."